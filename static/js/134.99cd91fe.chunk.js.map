{"version":3,"file":"static/js/134.99cd91fe.chunk.js","mappings":"4KAwBA,IApBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,UAAU,OAAhB,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAd,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAA1C,SACGK,GAASC,KAFLF,EADC,KASjB,C,6KCTKM,EACE,OADFA,EAEK,UAFLA,EAGM,WAINC,EAAOC,EAAAA,GAAAA,KAAH,qOAiEV,UAjDe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASH,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KAHmB,wCAmBnB,WAAkCC,GAAlC,uFAEIJ,EAAUN,GAFd,UAGuBW,EAAAA,EAAAA,IAAiBD,GAHxC,OAGUE,EAHV,OAIIR,EAAUQ,GACVN,EAAUN,GALd,gDAOIM,EAAUN,GAPd,0DAnBmB,sBA8BnB,OAzBAa,EAAAA,EAAAA,YAAU,WACR,IAAMH,EAAQF,EAAaM,IAAI,SAC3BJ,GAPa,oCAQfK,CAAmBL,EAEtB,GAAE,CAACF,KAqBF,UAAC,KAAD,YACE,UAACP,EAAD,CAAMe,SApBV,SAAkBC,GAChBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOV,MAAnBS,MACFT,EAAQS,EAAME,OAAS,CAAEX,MAAOS,GAAU,CAAC,EACjDV,EAAgBC,EACjB,EAeG,WACE,kBAAOY,KAAK,OAAOC,KAAK,QAAQC,YAAY,eAC5C,mBAAQF,KAAK,SAAb,UACE,SAAC,MAAD,CAAUG,MAAO,UAGT,aAAXpB,IACEhB,EAAOqC,QACN,SAAC,IAAD,CAAWrC,OAAQA,KAEnB,4DAGQ,aAAXgB,IAAyB,SAAC,UAAD,MAG/B,C,oFC5EKsB,EAAUzB,EAAAA,GAAAA,IAAH,8KAyBb,UAZiB,SAAA0B,GACf,OACE,SAAC,KAAD,WACE,UAACD,EAAD,YACE,iCACA,4CACA,SAAC,KAAD,CAAM9B,GAAG,IAAT,oCAIP,C,mMCzBDgC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrD,cACCE,EADD,yBAEEA,EAAIpB,KAAKqB,SAFX,kEAKA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACamB,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEpB,IAFhF,cACCsB,EADD,yBAIEA,EAAIpB,KAAKqB,SAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACaN,EAAAA,EAAAA,IAAA,gBACPM,EADO,oBACYL,EADZ,oBADb,cACCE,EADD,yBAIEA,EAAIpB,MAJN,kEAOA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACaN,EAAAA,EAAAA,IAAA,gBACPM,EADO,4BACoBL,EADpB,oBADb,cACCE,EADD,yBAIEA,EAAIpB,KAAKyB,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACaN,EAAAA,EAAAA,IAAA,gBACPM,EADO,4BACoBL,EADpB,oBADb,cACCE,EADD,yBAIEA,EAAIpB,KAAKqB,SAJX,kE","sources":["components/MovieList/MovieList.jsx","pages/Movies.jsx","pages/NotFound.jsx","services/apiMovies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List } from 'components/App.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List className=\"list\">\n      {movies.map(({ id, title, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || original_title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nexport default MovieList;\n","import { getMoviesByQuery } from 'services/apiMovies';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport { BsSearch } from 'react-icons/bs';\nimport { Section } from 'components/App.styled';\nimport NotFound from './NotFound';\nimport styled from 'styled-components';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Form = styled.form`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n\n  & input,\n  button {\n    padding: 4px 8px;\n  }\n  & button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      fetchMoviesByQuery(query);\n    }\n  }, [searchParams]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const { value } = e.target.query;\n    const query = value.trim() ? { query: value } : {};\n    setSearchParams(query);\n  }\n\n  async function fetchMoviesByQuery(query) {\n    try {\n      setStatus(Status.PENDING);\n      const data = await getMoviesByQuery(query);\n      setMovies(data);\n      setStatus(Status.RESOLVED);\n    } catch {\n      setStatus(Status.RESOLVED);\n    }\n  }\n\n  return (\n    <Section>\n      <Form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"query\" placeholder=\"Search...\" />\n        <button type=\"submit\">\n          <BsSearch width={16} />\n        </button>\n      </Form>\n      {status === 'resolved' &&\n        (movies.length ? (\n          <MovieList movies={movies} />\n        ) : (\n          <h2>Sorry we didn't find any movie</h2>\n        ))}\n\n      {status === 'rejected' && <NotFound />}\n    </Section>\n  );\n};\nexport default Movies;\n","import { Link } from 'react-router-dom';\nimport { Section } from 'components/App.styled';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  & h1 {\n    font-size: 88px;\n    text-align: center;\n  }\n  & h1 {\n    text-align: center;\n  }\n`;\n\nconst NotFound = props => {\n  return (\n    <Section>\n      <Wrapper>\n        <h1>404</h1>\n        <h3>Page not found</h3>\n        <Link to=\"/\">return to Homepage</Link>\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default NotFound;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31f0c221a6a4c16d94ce50023b58333b';\n\nexport async function getTrendingMovies() {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data.results;\n}\n\nexport async function getMoviesByQuery(query) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data.results;\n}\n\nexport async function getMovieById(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.results;\n}\n"],"names":["movies","location","useLocation","className","map","id","title","original_title","to","state","from","Status","Form","styled","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","getMoviesByQuery","data","useEffect","get","fetchMoviesByQuery","onSubmit","e","preventDefault","value","target","trim","type","name","placeholder","width","length","Wrapper","props","axios","API_KEY","getTrendingMovies","res","results","getMovieById","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}