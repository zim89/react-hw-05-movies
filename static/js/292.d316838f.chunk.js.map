{"version":3,"file":"static/js/292.d316838f.chunk.js","mappings":"sQAMMA,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAgEZ,EA7Da,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BF,GAA9B,uFAEID,EAAUL,GAFd,UAGuBS,EAAAA,EAAAA,IAAaH,GAHpC,OAGUI,EAHV,OAIIP,EAAQO,GACRL,EAAUL,GALd,gDAOIK,EAAUL,GAPd,yDADc,yBAAC,SAAD,2BAYdW,CAAeL,EAChB,GAAE,CAACA,KAGF,gCACc,YAAXF,EACGQ,EAAAA,QAAAA,SAAiB,CACfC,gBAAiB,gBAEnBD,EAAAA,QAAAA,SAEQ,aAAXR,IACC,eAAIU,UAAU,aAAd,SACGZ,EAAKa,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC1C,OACE,gBAAkBL,UAAU,aAA5B,WACE,gBACEM,IACEF,EAAY,yCAC0BA,GAClC,4EAENJ,UAAU,YACVO,IAAKJ,KAEP,iBAAKH,UAAU,aAAf,WACE,qCACQ,uBAAIG,QAEZ,0CACa,uBAAID,YAfZG,EAoBZ,MAGO,aAAXf,IAAyB,6DAG/B,C,mMCtEDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaF,EAAAA,EAAAA,IAAA,qCAAwCC,IADrD,cACCE,EADD,yBAEEA,EAAIf,KAAKgB,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACaN,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEK,IAFhF,cACCH,EADD,yBAIEA,EAAIf,KAAKgB,SAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvB,GAA5B,uFACagB,EAAAA,EAAAA,IAAA,gBACPhB,EADO,oBACYiB,EADZ,oBADb,cACCE,EADD,yBAIEA,EAAIf,MAJN,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACagB,EAAAA,EAAAA,IAAA,gBACPhB,EADO,4BACoBiB,EADpB,oBADb,cACCE,EADD,yBAIEA,EAAIf,KAAKR,MAJX,kEAOA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxB,GAA/B,uFACagB,EAAAA,EAAAA,IAAA,gBACPhB,EADO,4BACoBiB,EADpB,oBADb,cACCE,EADD,yBAIEA,EAAIf,KAAKgB,SAJX,kE","sources":["components/MovieCard/Cast/Cast.jsx","services/apiMovies.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { getMovieCast } from 'services/apiMovies';\nimport { useEffect, useState } from 'react';\nimport './Cast.scss';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieCast(movieId) {\n      try {\n        setStatus(Status.PENDING);\n        const data = await getMovieCast(movieId);\n        setCast(data);\n        setStatus(Status.RESOLVED);\n      } catch {\n        setStatus(Status.REJECTED);\n      }\n    }\n\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending'\n        ? Loading.standard({\n            backgroundColor: 'transparent',\n          })\n        : Loading.remove()}\n\n      {status === 'resolved' && (\n        <ul className=\"cast__list\">\n          {cast.map(({ character, name, profile_path, cast_id }) => {\n            return (\n              <li key={cast_id} className=\"cast__item\">\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                      : 'https://cdn.pixabay.com/photo/2017/10/05/22/55/anonymous-2821433_1280.jpg'\n                  }\n                  className=\"cast__img\"\n                  alt={name}\n                />\n                <div className=\"cast__meta\">\n                  <div>\n                    Name: <b>{name}</b>\n                  </div>\n                  <div>\n                    Character: <b>{character}</b>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31f0c221a6a4c16d94ce50023b58333b';\n\nexport async function getTrendingMovies() {\n  const res = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return res.data.results;\n}\n\nexport async function getMoviesByQuery(query) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data.results;\n}\n\nexport async function getMovieById(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data.results;\n}\n"],"names":["Status","useState","cast","setCast","status","setStatus","movieId","useParams","useEffect","getMovieCast","data","fetchMovieCast","Loading","backgroundColor","className","map","character","name","profile_path","cast_id","src","alt","axios","API_KEY","getTrendingMovies","res","results","getMoviesByQuery","query","getMovieById","getMovieReviews"],"sourceRoot":""}